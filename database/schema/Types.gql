type User {
  id: ID!
  username: String!
  first_name: String!
  last_name: String!
  email: String!
  password_hash: String!
  climbing_level: Int!
  profile_picture_url: String
  friends: [User!]!
  events: [Event!]!
}

type Session {
  id: ID!
  user_id: ID!
  token: String!
  expiration: Timestamp!
}

type Friendship {
  id: ID!
  user1_id: ID!
  user2_id: ID!
  user1: User!
  user2: User!
}

type Gym {
  id: ID!
  name: String!
  location: String!
  events: [Event!]!
}

type Style {
  id: ID!
  name: String!
  events: [Event!]!
}

type Event {
  id: ID!
  title: String!
  description: String!
  start_time: Timestamp!
  end_time: Timestamp!
  gym_id: ID!
  gym: Gym!
  style_id: ID!
  style: Style!
  users: [User!]!
}

type EventParticipant {
  id: ID!
  user_id: ID!
  event_id: ID!
  users: [User!]!
  events: [Event!]!
}

type Query {
  user(id: ID!): User
  users: [User!]!
  gym(id: ID!): Gym
  gyms: [Gym!]!
  event(id: ID!): Event
  events: [Event!]!
  style(id: ID!): Style
  styles: [Style!]!
}

type Mutation {
  createUser(
    username: String!
    email: String!
    password: String!
    climbing_level: Int!
    profile_picture_url: String
  ): User!
  updateUser(
    id: ID!
    username: String
    email: String
    password: String
    climbing_level: Int
    profile_picture_url: String
  ): User!
  deleteUser(id: ID!): User!
  createEvent(title: String!, date: String!, gym_id: ID!, style_id: ID!): Event!
  updateEvent(
    id: ID!
    title: String
    date: String
    gym_id: ID
    style_id: ID
  ): Event!
  deleteEvent(id: ID!): Event!
  addFriend(userId: ID!, friendId: ID!): Friendship!
  removeFriend(userId: ID!, friendId: ID!): Friendship!
}
